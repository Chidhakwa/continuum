@import 'http://fonts.googleapis.com/css?family=Hammersmith+One';

html, body
{ width: 100%; height: 100%; margin: 0; font: 16px monospace; overflow: hidden; }

.ƒoverlay
{ position: absolute; top: 0; left: 0; width: 100%; height: 100%; z-index: 10000; background-color: rgba(0, 0, 0, .3);
  pointer-events: none; }

h1, h2
{ margin: 0; font-family: 'Hammersmith One'; }


#masthead
{ padding: 10px; background: #046; }
  #masthead h1
  { font-size: 36px; color: #3aa; text-shadow: 3px 3px 1px #024; display: inline-block; margin-right: 15px; }
  #masthead h3
  { font-size: 16px; color: #fa3; text-shadow: 1px 1px 1px #000; font-weight: normal;
    display: inline-block; vertical-align: text-bottom; margin: 0; text-shadow: 1px 1px 0 #013 }

#github
{ display: block; position: absolute; top: 8px; right: 8px; padding: 8px 15px; background: #068;
  color: #aaf; text-shadow: 1px 1px 1px #046; text-decoration: none; border-radius: 4px / 10px; }
#github:hover
{ background: #09c; color: #fff; box-shadow: inset 0 0 20px #6bf; text-shadow: 1px 1px 1px #000; }

#container
{ }

.ƒconsole
{ background: #111; white-space: pre; color: #fff; padding: 6px; overflow: hidden; height: 100% }


#instructions
{ background: #111; color: #fff;}
.ƒinstructions
{ overflow-y: auto; margin: 0; padding: 6px; font-size: 70% }
  .ƒinstruction
  { white-space: pre }
  .ƒinstruction > div
  { display: inline-block; vertical-align: top }
  .ƒinstruction > span
  { margin-right: 5px; vertical-align: top }
  .ƒop-name
  { text-shadow: 1px 1px 1px #000 }

.ƒCOMPLETE, .ƒRETURN, .ƒTHROW
{ border-bottom: 1px solid #000; padding-bottom: 3px; margin-bottom: 3px; }
  .ƒCOMPLETE
  { color: hsl(0, 0%, 65%); border-bottom-color: hsl(0, 0%, 35%); }
  .ƒRETURN
  { color: hsl(280, 50%, 65%); border-bottom-color: hsl(280, 50%, 35%); }
  .ƒTHROW
  { color: hsl(345, 90%, 65%); border-bottom-color: hsl(345, 90%, 35%); }


.ƒCALL, .ƒCONSTRUCT
{ border-top: 1px solid #000; padding-top: 3px; margin-top: 3px; }
  .ƒCALL
  { color: hsl(180, 50%, 65%); border-top-color: hsl(180, 50%, 35%); }
  .ƒCONSTRUCT
  { color: hsl(200, 50%, 65%); border-top-color: hsl(200, 50%, 35%); }

.ƒTHIS
{ color: hsl(100, 50%, 75%); }

.ƒbutton
{ border: 0; background: none; -webkit-appearence: none; -moz-appearence: none; font-family: 'Hammersmith One';
  font-weight: bold; appearence: none; display: inline-block; cursor: pointer;}

.ƒunpause
{ position: absolute; top: 50px; right: 50px; padding: .3em 1em;
  box-shadow: 0 0 20px hsla(30, 100%, 80%, .3);
  background: -webkit-linear-gradient(bottom, hsla(30, 100%, 45%, 1), hsla(30, 100%, 25%, 1));
  background:    -moz-linear-gradient(bottom, hsla(30, 100%, 45%, 1), hsla(30, 100%, 25%, 1));
  background:     -ms-linear-gradient(bottom, hsla(30, 100%, 45%, 1), hsla(30, 100%, 25%, 1));
  background:         linear-gradient(bottom, hsla(30, 100%, 45%, 1), hsla(30, 100%, 25%, 1)); }
.ƒunpause:hover
{ box-shadow: 0 0 30px hsla(30, 100%, 60%, .7);
  background: -webkit-linear-gradient(bottom, hsla(30, 100%, 60%, 1), hsla(30, 100%, 40%, 1));
  background:    -moz-linear-gradient(bottom, hsla(30, 100%, 60%, 1), hsla(30, 100%, 40%, 1));
  background:     -ms-linear-gradient(bottom, hsla(30, 100%, 60%, 1), hsla(30, 100%, 40%, 1));
  background:         linear-gradient(bottom, hsla(30, 100%, 60%, 1), hsla(30, 100%, 40%, 1)); }

.ƒunpause .ƒbutton-text
{ font-size: 30px; color: hsl(30, 100%, 90%);
  -webkit-text-stroke: 1.3px hsl(30, 100%, 5%); text-shadow: 2px 2px 1px hsl(30, 100%, 5%); }



#input
{ background: #000; }
.ƒeditor
{ position: absolute; top: 6px; left: 0; right: 0; bottom: 0; }
.CodeMirror
{ width: 100%; height: 100%; color: #fff }
.root
{ background: #000; color: #fff; width: 100%; height: 100%; overflow-y: auto; padding: 15px; }

.ƒroot
{ top: 50px; left: 0; right: 0; bottom: 0; }
  .ƒpanel
  { position: absolute; }
    .ƒpanel > *
    { box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box }
    .ƒtop    { left: 0; right: 0; top: 0; }
    .ƒbottom { left: 0; right: 0; bottom: 0; }

    .ƒleft  { top: 0; bottom: 0; left: 0; }
    .ƒright { top: 0; bottom: 0; right: 0; }

    .ƒsplitter.ƒtop    { border-bottom: 3px solid #688 }
    .ƒsplitter.ƒleft   { border-right: 3px solid #688 }
    .ƒsplitter.ƒbottom { border-top: 3px solid #688 }
    .ƒsplitter.ƒright  { border-left: 3px solid #688 }

      .ƒpanel-label
      { position: absolute; color: #8ff; right: 8px; text-shadow: 1px 1px 0 #066, 0 0 0 #0ff; opacity: .1;
        -webkit-transition: .3s; -moz-transition: .3s; transition: .3s }
      .ƒpanel:focus > .ƒpanel-label
      { opacity: 1; text-shadow: 1px 1px 0 #066, 0 0 15px #0ff; }
      .ƒtop > .ƒpanel-label
      { bottom: 8px; }
      .ƒbottom > .ƒpanel-label
      { top: 8px; }

.ƒrow-resize { cursor: row-resize }
.ƒcol-resize { cursor: col-resize }

.ƒdrag-helper
{ position: fixed; top: 0; left: 0; width: 100%; height: 100%; z-index: 1000; }


.ƒsplitter
{ position: absolute; z-index: 10000; border: 0 solid #068; }
.ƒsplitter-vertical
{ top: 0; left: 0; width: 100%; height: 3px; cursor: row-resize; border-top-width: 1px; box-shadow: 1px 3px 5px 0 rgba(0,0,0,.6); }
.ƒsplitter-horizontal
{ top: 0; left: 0; width: 3px; height: 100%; cursor: col-resize; border-left-width: 1px; box-shadow: 3px 1px 5px 0 rgba(0,0,0,.6); }

.ƒsplitter-vertical
{ background: -webkit-linear-gradient(bottom, hsla(200, 100%, 50%, .1), hsla(200, 100%, 50%, .6));
  background:    -moz-linear-gradient(bottom, hsla(200, 100%, 50%, .1), hsla(200, 100%, 50%, .6));
  background:     -ms-linear-gradient(bottom, hsla(200, 100%, 50%, .1), hsla(200, 100%, 50%, .6));
  background:         linear-gradient(bottom, hsla(200, 100%, 50%, .1), hsla(200, 100%, 50%, .6)); }
.ƒsplitter-vertical:hover
{ background: -webkit-linear-gradient(bottom, hsla(200, 100%, 50%, .3), hsla(200, 100%, 50%, .8));
  background:    -moz-linear-gradient(bottom, hsla(200, 100%, 50%, .3), hsla(200, 100%, 50%, .8));
  background:     -ms-linear-gradient(bottom, hsla(200, 100%, 50%, .3), hsla(200, 100%, 50%, .8));
  background:         linear-gradient(bottom, hsla(200, 100%, 50%, .3), hsla(200, 100%, 50%, .8)); }
.ƒsplitter-vertical.ƒdragging
{ background: -webkit-linear-gradient(bottom, hsla(200, 100%, 50%, .5), hsla(200, 100%, 50%, 1));
  background:    -moz-linear-gradient(bottom, hsla(200, 100%, 50%, .5), hsla(200, 100%, 50%, 1));
  background:     -ms-linear-gradient(bottom, hsla(200, 100%, 50%, .5), hsla(200, 100%, 50%, 1));
  background:         linear-gradient(bottom, hsla(200, 100%, 50%, .5), hsla(200, 100%, 50%, 1)); }

.ƒsplitter-horizontal
{ background: -webkit-linear-gradient(right, hsla(200, 100%, 50%, .1), hsla(200, 100%, 50%, .6));
  background:    -moz-linear-gradient(right, hsla(200, 100%, 50%, .1), hsla(200, 100%, 50%, .6));
  background:     -ms-linear-gradient(right, hsla(200, 100%, 50%, .1), hsla(200, 100%, 50%, .6));
  background:         linear-gradient(right, hsla(200, 100%, 50%, .1), hsla(200, 100%, 50%, .6)); }
.ƒsplitter-horizontal:hover
{ background: -webkit-linear-gradient(right, hsla(200, 100%, 50%, .3), hsla(200, 100%, 50%, .8));
  background:    -moz-linear-gradient(right, hsla(200, 100%, 50%, .3), hsla(200, 100%, 50%, .8));
  background:     -ms-linear-gradient(right, hsla(200, 100%, 50%, .3), hsla(200, 100%, 50%, .8));
  background:         linear-gradient(right, hsla(200, 100%, 50%, .3), hsla(200, 100%, 50%, .8)); }
.ƒsplitter-horizontal.ƒdragging
{ background: -webkit-linear-gradient(right, hsla(200, 100%, 50%, .5), hsla(200, 100%, 50%, 1));
  background:    -moz-linear-gradient(right, hsla(200, 100%, 50%, .5), hsla(200, 100%, 50%, 1));
  background:     -ms-linear-gradient(right, hsla(200, 100%, 50%, .5), hsla(200, 100%, 50%, 1));
  background:         linear-gradient(right, hsla(200, 100%, 50%, .5), hsla(200, 100%, 50%, 1)); }


.ƒtree
{ margin: 0; padding: 0 0 0 10px; list-style: none; display: none; }
.ƒtree.ƒexpanded
{ display: block; }
  .ƒproperty
  {}
    .ƒkey, .ƒbranch, .ƒleaf
    { display: inline-block; }
    .ƒkey
    { margin-right: 15px; vertical-align: top }
    .ƒbranch
    {}
    .ƒleaf
    {}
      .ƒbranch > .ƒlabel:hover
      { text-decoration: underline; cursor: pointer; }


.ƒBooleanValue   { color: #ff8 } /* hsl( 60, 100%, 77%) */
.ƒNullValue      { color: #668 } /* hsl(240,  14%, 47%) */
.ƒNumberValue    { color: #a6f } /* hsl(267, 100%, 70%) */
.ƒStringValue    { color: #0f6 } /* hsl(144, 100%, 50%) */
.ƒUndefinedValue { color: #686 } /* hsl(120,  14%, 47%) */

.ƒArguments      { color: #ff0 } /* hsl( 60, 100%, 50%) */
.ƒArray          { color: #f68 } /* hsl(347, 100%, 70%) */
.ƒBoolean        { color: #af6 } /* hsl( 93, 100%, 70%) */
.ƒDate           { color: #0a0 } /* hsl(120, 100%, 33%) */
.ƒError          { color: #f06 } /* hsl(336, 100%, 50%) */
.ƒFunction       { color: #6af } /* hsl(213, 100%, 70%) */
.ƒJSON           { color: #fc8 } /* hsl( 34, 100%, 77%) */
.ƒGlobal         { color: #8a0 } /* hsl( 72, 100%, 33%) */
.ƒMap            { color: #f60 } /* hsl( 24, 100%, 50%) */
.ƒMath           { color: #fc8 } /* hsl( 34, 100%, 77%) */
.ƒNumber         { color: #a0f } /* hsl(280, 100%, 50%) */
.ƒObject         { color: #ffa } /* hsl( 60, 100%, 83%) */
.ƒRegExp         { color: #6c0 } /* hsl( 90, 100%, 40%) */
.ƒSet            { color: #fa6 } /* hsl( 27, 100%, 70%) */
.ƒString         { color: #0fa } /* hsl(160, 100%, 50%) */
.ƒWeakMap        { color: #fa0 } /* hsl( 40, 100%, 50%) */

.ƒProto          { color: #a08 } /* hsl(312, 100%, 33%) */
.ƒConstructor    { color: #0af } /* hsl(200, 100%, 50%) */
.ƒOperator       { color: #0ff } /* hsl(180, 100%, 50%) */
.ƒException      { color: #f06 } /* hsl(336, 100%, 50%) */
.ƒCode           { color: #af0 }
.ƒScope          { color: #ff0 }

.ƒParams         { color: #08f } /* hsl(208, 100%, 50%) */
.ƒParams:before  { color: #8cf } /* hsl(206, 100%, 77%) */
.ƒParams:after   { color: #8cf } /* hsl(206, 100%, 77%) */
.ƒParam:after    { color: #8cf } /* hsl(206, 100%, 77%) */

.ƒECW            { color: #ccc } /* hsl(  0,   0%, 80%) */
.ƒE_W            { color: #ccf } /* hsl(240, 100%, 90%) */
.ƒ__W            { color: #88a } /* hsl(240,  17%, 60%) */
.ƒ_CW            { color: #666 } /* hsl(  0,   0%, 40%) */
.ƒEC_            { color: #ff8 } /* hsl( 60, 100%, 77%) */
.ƒE__            { color: #0fc } /* hsl(168, 100%, 50%) */
.ƒ_C_            { color: #660 } /* hsl( 60, 100%, 20%) */
.ƒ___            { color: #088 } /* hsl(180, 100%, 27%) */
.ƒ__A            { color: #860 } /* hsl( 45, 100%, 27%) */
.ƒE_A            { color: #fc8 } /* hsl( 34, 100%, 77%) */
.ƒ_CA            { color: #868 } /* hsl(300,  14%, 47%) */
.ƒECA            { color: #fc0 } /* hsl( 48, 100%, 50%) */

.ƒParams    { font-style: italic }
.ƒException { font-weight: bold }

.ƒCode  { white-space: pre-wrap; }
.ƒParams:before { content: '(';}
.ƒParams:after  { content: ')'; }
  .ƒParam:after { content: ', ' }
  .ƒParam:last-child:after { content: '' }




.CodeMirror .CodeMirror-secondarycursor    { border-left: 2px solid #acc; }
.CodeMirror .CodeMirror-cursor             { border-left: 2px solid #acc; }
.CodeMirror-gutters            { border-right: 1px solid #036; background: #111; }
.CodeMirror-linenumber         { color: #036; text-shadow: 1px 1px 1px #368; }
.cm-s-default .cm-keyword      { color: #f0a }
.cm-s-default .cm-atom         { color: #f09 }
.cm-s-default .cm-number       { color: #a0f }
.cm-s-default .cm-def          { color: #888 }
.cm-s-default .cm-variable     { color: #aaa }
.cm-s-default .cm-variable-2   { color: #ff8 }
.cm-s-default .cm-variable-3   { color: #af8 }
.cm-s-default .cm-property     { color: #08f }
.cm-s-default .cm-operator     { color: #0ff }
.cm-s-default .cm-comment      { color: #666 }
.cm-s-default .cm-string       { color: #0f6 }
.cm-s-default .cm-string-2     { color: #0fa }
.cm-s-default .cm-meta         { color: #a08 }
.cm-s-default .cm-error        { color: #f06 }
.cm-s-default .cm-qualifier    { color: #555 }
.cm-s-default .cm-builtin      { color: #30f }
.cm-s-default .cm-bracket      { color: #096 }
.cm-s-default .cm-tag          { color: #170 }
.cm-s-default .cm-attribute    { color: #088 }
.cm-s-default .cm-header       { color: #f60 }
.cm-s-default .cm-quote        { color: #0f6 }
.cm-s-default .cm-hr           { color: #686 }
.cm-s-default .cm-link         { color: #08f }
.cm-invalidchar                { color: #f02 }
.CodeMirror-matchingbracket    { color: #0f0 }
.CodeMirror-nonmatchingbracket { color: #f22 }
.CodeMirror-selected           { background: #069; }
.CodeMirror-selected           { background: #036; }
.CodeMirror-searching          { background: rgba(255, 255, 0, .4); }

.cm-strong   { font-weight: bold }
.cm-header   { font-weight: bold }
.cm-em       { font-style: italic }
.cm-emstrong { font-style: italic; font-weight: bold }
.cm-link     { text-decoration: underline }


.CodeMirror             { font-family: monospace; }
.CodeMirror-scroll      { overflow: auto; }
.CodeMirror-lines       { padding: 4px 0; }
.CodeMirror pre         { padding: 0 4px; }
.CodeMirror-linenumbers { min-width: 30px; }
.CodeMirror-linenumber  { padding: 0 7px 0 5px; text-align: right; font-size: 13px }
.CodeMirror-cursor      { -webkit-transition: opacity .15s; }
.CodeMirror .CodeMirror-cursor.CodeMirror-overwrite {}
.CodeMirror-scrollbar-filler {}



.CodeMirror
{ line-height: 1; position: relative; overflow: hidden; width: 100%; height: 100%; }
  .CodeMirror-scroll
  { margin: 0 -30px -30px 0; padding: 0 30px 30px 0; height: 100%; outline: none; position: relative; cursor: text; }
  .CodeMirror-wrap .CodeMirror-scroll
  { overflow-x: hidden; }
  .CodeMirror-sizer
    { position: relative; }
    .CodeMirror-vscrollbar
    { position: absolute; z-index: 6; display: none; right: 0; top: 0; overflow-x: hidden; overflow-y: scroll; }
    .CodeMirror-hscrollbar
    { position: absolute; z-index: 6; display: none }
      .CodeMirror-scrollbar-filler
      { position: absolute; z-index: 6; right: 0; bottom: 0;}
    .CodeMirror-gutters
    { position: absolute; left: 0; top: 0; height: 100%; z-index: 1; }
      .CodeMirror-gutter
      { height: 100%; float: left; }
        .CodeMirror-gutter-elt
        { position: absolute; cursor: default; z-index: 4; }
    .CodeMirror-lines
    { cursor: text; }
      .CodeMirror pre
      { border: 0; margin: 0; background: none; font: inherit; white-space: pre; position: relative; overflow: visible; z-index: 2 }
      .CodeMirror-wrap pre
      { word-wrap: break-word; white-space: pre-wrap; word-break: normal; }
    .CodeMirror-linebackground
    { position: absolute; left: 0; right: 0; top: 0; bottom: 0; z-index: 0; }
    .CodeMirror-linewidget
    { position: relative; z-index: 2; }
    .CodeMirror-measure
    { position: absolute; width: 100%; height: 0px; overflow: hidden; visibility: hidden; }
      .CodeMirror-measure pre
      { position: static; }
    .CodeMirror .CodeMirror-cursor
    { position: absolute; visibility: hidden; border-right: none; width: 0; }
    .CodeMirror-focused .CodeMirror-cursor
    { visibility: visible; }

